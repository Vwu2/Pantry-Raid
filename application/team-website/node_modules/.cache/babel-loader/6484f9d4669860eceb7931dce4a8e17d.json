{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/pages/Inventory.jsx\";\nimport React, { Component } from 'react';\nimport { Accordion, Button, ButtonToolbar, Card, FormControl, InputGroup, ListGroup, Modal } from 'react-bootstrap';\nimport PantryRaidNavBar from '../components/PantryRaidNavBar';\nimport { withCookies } from 'react-cookie';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FOOD_NAMES, FOOD_OPTIONS } from '../globals/foods';\nimport { createSessionFormData } from '../globals/sessionform';\n\nclass Inventory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      foodItems: [],\n      filterItem: '',\n      foodToAdd: -1,\n      intervalIsSet: false,\n      needLogin: false,\n      show: false,\n      showReceipt: false,\n      foodUploadedMessage: '',\n      foodUploadError: false,\n      foodUploadErrorMessage: '',\n      groceryList: '',\n      gotResponse: false,\n      files: {}\n    };\n\n    this.handleShowReceiptModal = () => {\n      this.setState(prevState => ({\n        showReceipt: !prevState.showReceipt,\n        groceryList: '',\n        gotResponse: false\n      }));\n    };\n\n    this.handleShowModal = () => {\n      this.setState(prevState => ({\n        show: !prevState.show,\n        foodUploadError: false,\n        foodUploadErrorMessage: '',\n        foodUploadedMessage: ''\n      }));\n    };\n\n    this.handleFoodAdd = () => {\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          this.getDataFromDb();\n          this.setState({\n            foodUploadError: false,\n            foodUploadErrorMessage: '',\n            foodUploadedMessage: 'Added'\n          });\n        }\n      };\n\n      const formData = createSessionFormData(this.props);\n      formData.append('food', this.state.foodToAdd.toString());\n      req.open('POST', 'http://cryptoflipit.com/backend/add_food');\n      req.send(formData);\n    };\n\n    this.removeFoodItem = id => {\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          this.getDataFromDb();\n        }\n      };\n\n      const formData = createSessionFormData(this.props);\n      formData.append('food', id.toString());\n      req.open('POST', 'http://cryptoflipit.com/backend/remove_food');\n      req.send(formData);\n    };\n\n    this.uploadReceipt = () => {\n      //handle upload\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          this.setState({\n            groceryList: JSON.parse(req.response),\n            gotResponse: true\n          });\n          this.getDataFromDb();\n        }\n      };\n\n      const formData = createSessionFormData(this.props);\n      formData.append('file', this.state.files, this.state.files.name);\n      req.open('POST', 'http://cryptoflipit.com/backend/receipt');\n      req.send(formData);\n    };\n\n    this.addFile = event => {\n      const file = event.target.files[0];\n      this.setState(prevState => ({\n        files: file\n      }));\n    };\n\n    this.getDataFromDb = () => {\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          // console.log(`inventory response: ${req.response}`);\n          if (req.response === 'failure') {\n            this.setState({\n              needLogin: true\n            });\n          } else {\n            this.setState({\n              foodItems: req.response.length === 0 ? [] : JSON.parse(req.response).map(food => {\n                return {\n                  id: food[0],\n                  entries: food[1].map(entry => {\n                    return {\n                      quantity: entry[0],\n                      expiration: new Date(entry[1] * 1000)\n                    };\n                  })\n                };\n              })\n            });\n          }\n        }\n      };\n\n      const formData = createSessionFormData(this.props);\n      req.open('POST', 'http://cryptoflipit.com/backend/inventory');\n      req.send(formData);\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  render() {\n    if (this.state.needLogin === true) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/Login'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(PantryRaidNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Inventory\"), React.createElement(ButtonToolbar, {\n      className: \"mt-2 mr-2\",\n      style: {\n        marginLeft: 'auto',\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mr-2\",\n      onClick: this.handleShowReceiptModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Reciept\"), React.createElement(Button, {\n      size: \"lg\",\n      onClick: this.handleShowModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"+ Add\"))), React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleShowModal,\n      style: {\n        position: 'fixed',\n        top: '25%',\n        left: '10%%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Add Food\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.foodUploadError ? this.state.foodUploadErrorMessage : this.state.foodUploadedMessage, React.createElement(Select, {\n      options: FOOD_OPTIONS,\n      onChange: food => this.setState({\n        foodToAdd: food.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Button, {\n      varient: \"outline-secondary\",\n      onClick: this.handleFoodAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Add\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleShowModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal, {\n      show: this.state.showReceipt,\n      onHide: this.handleShowReceiptModal,\n      style: {\n        position: 'fixed',\n        top: '25%',\n        left: '10%%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Upload Receipt\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.gotResponse ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      as: \"li\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.groceryList.map(ingredientId => React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, FOOD_NAMES.get(ingredientId))))) : React.createElement(InputGroup, {\n      className: \"mb-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      readOnly: true,\n      type: \"file\",\n      placeholder: \"Choose a File\",\n      onChange: this.addFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      as: Button,\n      onClick: this.uploadReceipt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Upload\")), this.state.groceryList))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.gotResponse ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleShowReceiptModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Close\")) : React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleShowReceiptModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Filter\",\n      \"aria-label\": \"Filter\",\n      \"aria-describedby\": \"basic-addon2\",\n      onChange: event => this.setState({\n        filterItem: event.target.value.toLowerCase()\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(ListGroup, {\n      as: \"ul\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.state.foodItems.length <= 0 ? React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \" Inventory Empty \") : this.state.foodItems.filter(food => FOOD_NAMES.get(food.id).toLowerCase().indexOf(this.state.filterItem) !== -1).map(food => //list the food's name here add key pair\n    React.createElement(Accordion, {\n      key: food.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      as: \"li\",\n      className: \"p-0 mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      className: \"p-0 mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      eventKey: food.id,\n      className: \"btn-block mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, FOOD_NAMES.get(food.id))), React.createElement(Accordion.Collapse, {\n      eventKey: food.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, food.entries.map(entry => React.createElement(\"div\", {\n      key: entry.expiration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Quantity: \", entry.quantity, \", Expiration: \", entry.expiration.toDateString())), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Total: \", food.entries.reduce((a, b) => a + b.quantity, 0)), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => this.removeFoodItem(food.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Remove\")))))))));\n  }\n\n}\n\nexport default withCookies(Inventory);","map":{"version":3,"sources":["/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/pages/Inventory.jsx"],"names":["React","Component","Accordion","Button","ButtonToolbar","Card","FormControl","InputGroup","ListGroup","Modal","PantryRaidNavBar","withCookies","Redirect","Select","FOOD_NAMES","FOOD_OPTIONS","createSessionFormData","Inventory","state","foodItems","filterItem","foodToAdd","intervalIsSet","needLogin","show","showReceipt","foodUploadedMessage","foodUploadError","foodUploadErrorMessage","groceryList","gotResponse","files","handleShowReceiptModal","setState","prevState","handleShowModal","handleFoodAdd","req","XMLHttpRequest","onreadystatechange","readyState","getDataFromDb","formData","props","append","toString","open","send","removeFoodItem","id","uploadReceipt","JSON","parse","response","name","addFile","event","file","target","length","map","food","entries","entry","quantity","expiration","Date","componentDidMount","render","pathname","display","marginLeft","float","position","top","left","value","ingredientId","get","toLowerCase","justifyContent","textAlign","filter","indexOf","toDateString","reduce","a","b"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Accordion, Button, ButtonToolbar, Card, FormControl, InputGroup, ListGroup, Modal } from 'react-bootstrap';\nimport PantryRaidNavBar from '../components/PantryRaidNavBar';\nimport { withCookies } from 'react-cookie';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FOOD_NAMES, FOOD_OPTIONS } from '../globals/foods'\nimport { createSessionFormData } from '../globals/sessionform'\n\nclass Inventory extends Component {\n  state = {\n    foodItems: [],\n    filterItem: '',\n    foodToAdd: -1,\n    intervalIsSet: false,\n    needLogin: false,\n    show: false,\n    showReceipt: false,\n    foodUploadedMessage: '',\n    foodUploadError: false,\n    foodUploadErrorMessage: '',\n    groceryList: '',\n    gotResponse: false,\n    files: {}\n  };\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  handleShowReceiptModal = () => {\n    this.setState(prevState => ({\n      showReceipt: !prevState.showReceipt,\n      groceryList: '',\n      gotResponse: false,\n    }));\n  };\n\n  handleShowModal = () => {\n    this.setState(prevState => ({\n      show: !prevState.show,\n      foodUploadError: false,\n      foodUploadErrorMessage: '',\n      foodUploadedMessage: '',\n    }));\n  };\n\n  handleFoodAdd = () => {\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        this.getDataFromDb();\n        this.setState({\n          foodUploadError: false,\n          foodUploadErrorMessage: '',\n          foodUploadedMessage: 'Added',\n        });\n      }\n    };\n\n    const formData = createSessionFormData(this.props);\n    formData.append('food', this.state.foodToAdd.toString());\n\n    req.open('POST', 'http://cryptoflipit.com/backend/add_food');\n    req.send(formData);\n  };\n\n  removeFoodItem = (id) => {\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        this.getDataFromDb();\n      }\n    };\n\n    const formData = createSessionFormData(this.props);\n    formData.append('food', id.toString());\n\n    req.open('POST', 'http://cryptoflipit.com/backend/remove_food');\n    req.send(formData);\n  };\n\n  uploadReceipt = () => {\n    //handle upload\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        this.setState({\n          groceryList: JSON.parse(req.response),\n          gotResponse: true\n        });\n        this.getDataFromDb();\n      }\n    };\n\n    const formData = createSessionFormData(this.props);\n    formData.append('file', this.state.files, this.state.files.name);\n\n    req.open('POST', 'http://cryptoflipit.com/backend/receipt');\n    req.send(formData);\n  };\n\n\n  addFile = (event) => {\n    const file = event.target.files[0];\n    this.setState(prevState => ({\n      files: file\n    }));\n  };\n\n  //handle data retrieval\n  getDataFromDb = () => {\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        // console.log(`inventory response: ${req.response}`);\n        if (req.response === 'failure') {\n          this.setState({ needLogin: true })\n        } else {\n          this.setState({\n            foodItems: req.response.length === 0\n              ? []\n              : JSON.parse(req.response).map(food => {\n                return {\n                  id: food[0],\n                  entries: food[1].map(entry => {\n                    return { quantity: entry[0], expiration: new Date(entry[1] * 1000) }\n                  })\n                }\n              })\n          });\n        }\n      }\n    };\n\n    const formData = createSessionFormData(this.props);\n    req.open('POST', 'http://cryptoflipit.com/backend/inventory');\n    req.send(formData);\n  };\n\n  render() {\n    if (this.state.needLogin === true) {\n      return (\n        <Redirect to={{ pathname: '/Login' }} />\n      );\n    }\n\n    return (\n      <div>\n        <PantryRaidNavBar />\n        <div style={{ display: 'flex' }}>\n          <h1 className='ml-2'>Inventory</h1>\n          <ButtonToolbar className='mt-2 mr-2' style={{ marginLeft: 'auto', float: 'right' }}>\n            <Button className='mr-2' onClick={this.handleShowReceiptModal}>Reciept</Button>\n            <Button size='lg' onClick={this.handleShowModal}>+ Add</Button>\n          </ButtonToolbar>\n        </div>\n\n        <Modal show={this.state.show} onHide={this.handleShowModal}\n          style={{ position: 'fixed', top: '25%', left: '10%%' }}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add Food</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div>\n              {\n                this.state.foodUploadError ? this.state.foodUploadErrorMessage : this.state.foodUploadedMessage\n              }\n              <Select\n                options={FOOD_OPTIONS}\n                onChange={(food) => this.setState({ foodToAdd: food.value })} />\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button varient='outline-secondary' onClick={this.handleFoodAdd}>Add</Button>\n            <Button variant='primary' onClick={this.handleShowModal}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showReceipt} onHide={this.handleShowReceiptModal}\n          style={{ position: 'fixed', top: '25%', left: '10%%' }}>\n          <Modal.Header closeButton>\n            <Modal.Title>Upload Receipt</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div>\n              {\n                this.state.gotResponse ? \n                <div>\n                  <ListGroup as=\"li\">\n                    {\n                      this.state.groceryList.map(ingredientId => (\n                      <ListGroup.Item>{FOOD_NAMES.get(ingredientId)}</ListGroup.Item>\n                      ))\n                    }\n                  </ListGroup>\n                </div> :\n                <InputGroup className='mb-3 '>\n                <FormControl\n                  readOnly\n                  type='file'\n                  placeholder='Choose a File'\n                  onChange={this.addFile}\n                />\n                <InputGroup.Append>\n                  <InputGroup.Text as={Button} onClick={this.uploadReceipt}>Upload</InputGroup.Text>\n                </InputGroup.Append>\n                {this.state.groceryList}\n              </InputGroup>\n              }\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            {\n              this.state.gotResponse ?\n                <div>\n                  <Button variant='primary' onClick={this.handleShowReceiptModal}>Close</Button>\n                </div>\n                :\n                <Button variant='primary' onClick={this.handleShowReceiptModal}>Close</Button>\n            }\n          </Modal.Footer>\n        </Modal>\n\n\n        <InputGroup>\n          <FormControl\n            placeholder='Filter'\n            aria-label='Filter'\n            aria-describedby='basic-addon2'\n            onChange={event => this.setState({ filterItem: event.target.value.toLowerCase() })}\n          />\n        </InputGroup>\n\n        <ListGroup as='ul' style={{ display: 'flex', justifyContent: 'center', textAlign: 'center' }}>\n          {this.state.foodItems.length <= 0\n            ? <div style={{ display: 'flex', justifyContent: 'center' }}> Inventory Empty </div>\n            : this.state.foodItems\n              .filter(food => FOOD_NAMES.get(food.id).toLowerCase().indexOf(this.state.filterItem) !== -1)\n              .map(food => (\n                //list the food's name here add key pair\n                <Accordion key={food.id}>\n                  <ListGroup.Item as='li' className='p-0 mb-0'>\n                    <Card className='mb-0'>\n                      <Card.Header className='p-0 mb-0'>\n                        <Accordion.Toggle as={Button} eventKey={food.id} className='btn-block mb-0'>\n                          {FOOD_NAMES.get(food.id)}\n                        </Accordion.Toggle>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={food.id}>\n                        <Card.Body>\n                          {food.entries.map(entry => (\n                            <div key={entry.expiration}>Quantity: {entry.quantity},\n                              Expiration: {entry.expiration.toDateString()}</div>\n                          ))}\n                          <div>Total: {food.entries.reduce((a, b) => a + b.quantity, 0)}</div>\n                          <Button variant='danger' onClick={() => this.removeFoodItem(food.id)}>Remove</Button>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Card>\n                  </ListGroup.Item>\n                </Accordion>\n              ))}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nexport default withCookies(Inventory);\n"]},"metadata":{},"sourceType":"module"}