{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/components/LoginForm.js\";\nimport React from 'react';\nimport './LoginForm.css';\nimport { withCookies } from 'react-cookie';\nimport { Button, Form } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      pass: \"\",\n      authenticated: false,\n      errorMessage: ''\n    };\n\n    this.handleSignIn = () => {\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          // console.log(`login response: {${req.response}}`);\n          if (req.response === 'failure') {\n            this.failedInfoStateChange();\n          } else {\n            try {\n              const response = JSON.parse(req.response);\n              const session = response.session;\n              const session_sig = response.session_sig;\n              const expiration = new Date(session.expiration * 1000);\n              const cookies = this.props.cookies;\n              cookies.set('session', JSON.stringify(session), {\n                expires: expiration\n              });\n              cookies.set('session_sig', session_sig, {\n                expires: expiration\n              });\n              this.setState({\n                authenticated: true\n              });\n            } catch (e) {\n              console.log(`invalid JSON:\\n${req.response}`);\n            }\n          }\n        }\n      };\n\n      const formData = new FormData();\n      formData.append('email', this.state.email);\n      formData.append('password', this.state.pass);\n      req.open('POST', 'http://cryptoflipit.com/backend/login');\n      req.send(formData);\n    };\n\n    this.failedInfoStateChange = () => {\n      this.setState({\n        errorMessage: 'Incorrect Email/Password\\nPlease Try Again'\n      });\n    };\n  }\n\n  render() {\n    if (this.state.authenticated === true) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/MealPlan'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"font-weight-bold \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Pantry Raid\")), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.errorMessage)), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: event => this.setState({\n        pass: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      className: \"btn-lg btn-dark btn-block\",\n      onClick: this.handleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(Button, {\n      variant: \"primary\",\n      className: \"mt-3 btn-lg btn-block\",\n      onClick: this.props.signUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default withCookies(LoginForm);","map":{"version":3,"sources":["/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/components/LoginForm.js"],"names":["React","withCookies","Button","Form","Redirect","LoginForm","Component","state","email","pass","authenticated","errorMessage","handleSignIn","req","XMLHttpRequest","onreadystatechange","readyState","response","failedInfoStateChange","JSON","parse","session","session_sig","expiration","Date","cookies","props","set","stringify","expires","setState","e","console","log","formData","FormData","append","open","send","render","pathname","event","target","value","signUp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './LoginForm.css';\nimport {withCookies} from 'react-cookie';\nimport {Button, Form} from 'react-bootstrap'\nimport {Redirect} from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n  state = {\n    email: \"\",\n    pass: \"\",\n    authenticated: false,\n    errorMessage: ''\n  };\n\n  handleSignIn = () => {\n    const req = new XMLHttpRequest();\n\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        // console.log(`login response: {${req.response}}`);\n        if (req.response === 'failure') {\n          this.failedInfoStateChange();\n        } else {\n          try {\n            const response = JSON.parse(req.response);\n            const session = response.session;\n            const session_sig = response.session_sig;\n            const expiration = new Date(session.expiration * 1000);\n\n            const {cookies} = this.props;\n            cookies.set('session', JSON.stringify(session), {expires: expiration});\n            cookies.set('session_sig', session_sig, {expires: expiration});\n\n            this.setState({authenticated: true});\n          } catch (e) {\n            console.log(`invalid JSON:\\n${req.response}`);\n          }\n        }\n      }\n    };\n\n\n    const formData = new FormData();\n    formData.append('email', this.state.email);\n    formData.append('password', this.state.pass);\n\n    req.open('POST', 'http://cryptoflipit.com/backend/login');\n    req.send(formData);\n  };\n\n\n  failedInfoStateChange = () => {\n    this.setState({\n      errorMessage: 'Incorrect Email/Password\\nPlease Try Again'\n    });\n  };\n\n  render() {\n    if (this.state.authenticated === true) {\n      return <Redirect to={{\n        pathname: '/MealPlan'\n      }}/>\n    }\n    return (\n      <div className=\"login-form\">\n        <Form>\n          <h1 className=\"text-center\">\n            <span className=\"font-weight-bold \">Pantry Raid</span>\n          </h1>\n          <pre><h2 className=\"text-center\">{this.state.errorMessage}</h2></pre>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={(event) => this.setState({email: event.target.value})}/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(event) => this.setState({pass: event.target.value})}/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"Check me out\"/>\n          </Form.Group>\n\n          <Button variant=\"primary\" className=\"btn-lg btn-dark btn-block\" onClick={this.handleSignIn}>\n            Log in\n          </Button>\n          <Button variant=\"primary\" className=\"mt-3 btn-lg btn-block\" onClick={this.props.signUp}>\n            Sign Up\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n\n}\n\nexport default withCookies(LoginForm);\n"]},"metadata":{},"sourceType":"module"}