{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/components/SLForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport ListItems from './ListItems'; // import {FOOD_NAMES, FOOD_OPTIONS} from '../globals/foods';\n\nimport { FOOD_OPTIONS } from '../globals/foods';\nimport Select from 'react-select';\nimport { createSessionFormData } from \"../globals/sessionform\";\nimport { withCookies } from \"react-cookie\";\n\nclass SLForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = food => {\n      this.setState({\n        currentItem: {\n          text: food.label,\n          id: food.value,\n          key: Date.now()\n        }\n      }); // console.log(e.currentTarget)\n    };\n\n    this.handleUploadItems = () => {\n      console.log('saving stuff');\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          this.props.handleAddComplete();\n        }\n      };\n\n      const formData = createSessionFormData(this.props);\n      formData.append('name', this.state.listName);\n      formData.append('foods', JSON.stringify(this.state.items.map(x => x.id)));\n      req.open('POST', 'http://cryptoflipit.com/backend/add_shopping_list');\n      req.send(formData);\n    };\n\n    this.state = {\n      listName: '',\n      //rename items to ingredientNames\n      items: [],\n      currentItem: {\n        text: '',\n        id: -1,\n        key: ''\n      }\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.text !== \"\") {\n      // Destructing Assignment\n      const newItems = [...this.state.items, newItem]; // this unpacks the list and converst in to indiciaul items, similiar to split in java\n\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      });\n    } // console.log(newItem)\n\n\n    console.log(this.state);\n  } //backend upload items\n  //work with items and listName\n\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n    console.log(this.state.items);\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  handleNameInput(e) {\n    this.setState({\n      listName: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"SLForm.ControlInput1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"New Shopping List Name:\")), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Shopping List Name\",\n      defaultValue: this.state.listName,\n      onChange: this.handleNameInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Add Item\")), React.createElement(Select, {\n      options: FOOD_OPTIONS,\n      onChange: food => this.handleInput(food),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.addItem,\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Add Item +\")), React.createElement(ListItems, {\n      items: this.state.items,\n      deleteItem: this.deleteItem,\n      setUpdate: this.setUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleUploadItems,\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default withCookies(SLForm);","map":{"version":3,"sources":["/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/components/SLForm.js"],"names":["React","Component","Button","Form","ListItems","FOOD_OPTIONS","Select","createSessionFormData","withCookies","SLForm","constructor","props","handleInput","food","setState","currentItem","text","label","id","value","key","Date","now","handleUploadItems","console","log","req","XMLHttpRequest","onreadystatechange","readyState","handleAddComplete","formData","append","state","listName","JSON","stringify","items","map","x","open","send","bind","addItem","deleteItem","setUpdate","handleNameInput","e","preventDefault","newItem","newItems","filteredItems","filter","item","target","render","float"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Form} from 'react-bootstrap';\nimport ListItems from './ListItems';\n// import {FOOD_NAMES, FOOD_OPTIONS} from '../globals/foods';\nimport {FOOD_OPTIONS} from '../globals/foods'\nimport Select from 'react-select';\nimport {createSessionFormData} from \"../globals/sessionform\";\nimport {withCookies} from \"react-cookie\";\n\n\nclass SLForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listName: '',\n      //rename items to ingredientNames\n      items: [],\n      currentItem: {\n        text: '',\n        id: -1,\n        key: ''\n      }\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this)\n  }\n\n  handleInput = (food) => {\n    this.setState({\n      currentItem: {\n        text: food.label,\n        id: food.value,\n        key: Date.now()\n      }\n    })\n    // console.log(e.currentTarget)\n  };\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if (newItem.text !== \"\") {\n      // Destructing Assignment\n      const newItems = [...this.state.items, newItem]; // this unpacks the list and converst in to indiciaul items, similiar to split in java\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n    // console.log(newItem)\n    console.log(this.state)\n  }\n\n  //backend upload items\n  //work with items and listName\n  handleUploadItems = () => {\n    console.log('saving stuff');\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        this.props.handleAddComplete();\n      }\n    };\n\n    const formData = createSessionFormData(this.props);\n    formData.append('name', this.state.listName);\n    formData.append('foods', JSON.stringify(this.state.items.map(x => x.id)));\n\n    req.open('POST', 'http://cryptoflipit.com/backend/add_shopping_list');\n    req.send(formData);\n  };\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item =>\n      item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n    console.log(this.state.items)\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = text\n      }\n    });\n    this.setState({\n      items: items\n    })\n  }\n\n  handleNameInput(e) {\n    this.setState({\n      listName: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Form>\n          <Form.Group controlId=\"SLForm.ControlInput1\">\n            <Form.Label><strong>New Shopping List Name:</strong></Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Shopping List Name\"\n              defaultValue={this.state.listName}\n              onChange={this.handleNameInput}\n            />\n            <hr/>\n            <Form.Label><strong>Add Item</strong></Form.Label>\n\n            {/* <Form.Control\n                            type=\"text\" \n                            placeholder=\"Enter Item to Add\" \n                            defaultValue={this.state.currentItem.text} \n                            onChange={this.handleInput}\n                        /> */}\n            <Select\n              options={FOOD_OPTIONS}\n              onChange={(food) => this.handleInput(food)}\n            />\n\n            <Button onClick={this.addItem} variant=\"success\">Add Item +</Button>\n          </Form.Group>\n\n          <ListItems\n            items={this.state.items}\n            deleteItem={this.deleteItem}\n            setUpdate={this.setUpdate}\n          ></ListItems>\n          <hr/>\n          <Button onClick={this.handleUploadItems} style={{float: \"right\"}}>Save</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withCookies(SLForm);\n"]},"metadata":{},"sourceType":"module"}