{"ast":null,"code":"var _jsxFileName = \"/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/pages/ShoppingList.jsx\";\nimport React, { Component } from 'react';\nimport { Accordion, Button, ButtonToolbar, Card, Modal, Popover } from 'react-bootstrap';\nimport PantryRaidNavBar from '../components/PantryRaidNavBar';\nimport SLForm from '../components/SLForm';\nimport { FOOD_NAMES } from \"../globals/foods\";\nimport { createSessionFormData } from \"../globals/sessionform\";\nimport { withCookies } from \"react-cookie\";\nimport { Redirect } from \"react-router-dom\";\n\nclass ShoppingList extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleAddComplete = () => {\n      this.handleCloseModal();\n      this.getDataFromDb();\n    };\n\n    this.handleRemoveShoppingList = sid => {\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          this.getDataFromDb();\n        }\n      };\n\n      const formData = createSessionFormData(this.props);\n      formData.append('sid', sid);\n      req.open('POST', 'http://cryptoflipit.com/backend/remove_shopping_list');\n      req.send(formData);\n    };\n\n    this.getDataFromDb = () => {\n      const req = new XMLHttpRequest();\n\n      req.onreadystatechange = () => {\n        if (req.readyState === 4) {\n          if (req.response === 'failure') {\n            this.setState({\n              needLogin: true\n            });\n          } else {\n            if (req.response === 'failure') {\n              this.setState({\n                needLogin: true\n              });\n            } else {\n              this.setState({\n                shoppingLists: JSON.parse(req.response)\n              });\n            }\n          }\n        }\n      };\n\n      const formData = createSessionFormData(this.props);\n      req.open('POST', 'http://cryptoflipit.com/backend/get_shopping_lists');\n      req.send(formData);\n    };\n\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.state = {\n      show: false,\n      shoppingLists: [],\n      needLogin: false\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  handleCloseModal() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShowModal() {\n    this.setState({\n      show: true\n    });\n  }\n\n  render() {\n    if (this.state.needLogin === true) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/Login'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n\n    const popover = React.createElement(Popover, {\n      id: \"modal-popover\",\n      title: \"popover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(PantryRaidNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Shopping Lists\"), React.createElement(ButtonToolbar, {\n      className: \"mt-2 mr-2\",\n      style: {\n        marginLeft: 'auto',\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"lg\",\n      onClick: this.handleShowModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"+ Add\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.shoppingLists.map((listDetail, index) => {\n      return React.createElement(Accordion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, listDetail.name), React.createElement(Accordion.Collapse, {\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, listDetail.foods.map(food => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, FOOD_NAMES.get(food))), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.handleRemoveShoppingList(listDetail.sid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Delete\")))));\n    })), React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add Shopping List\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(SLForm, {\n      handleAddComplete: this.handleAddComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withCookies(ShoppingList);","map":{"version":3,"sources":["/Users/vincentwu/Documents/GitHub/csc648-03-fa19-Team101/application/team-website/src/pages/ShoppingList.jsx"],"names":["React","Component","Accordion","Button","ButtonToolbar","Card","Modal","Popover","PantryRaidNavBar","SLForm","FOOD_NAMES","createSessionFormData","withCookies","Redirect","ShoppingList","constructor","props","context","handleAddComplete","handleCloseModal","getDataFromDb","handleRemoveShoppingList","sid","req","XMLHttpRequest","onreadystatechange","readyState","formData","append","open","send","response","setState","needLogin","shoppingLists","JSON","parse","handleShowModal","bind","state","show","componentDidMount","render","pathname","popover","display","marginLeft","float","map","listDetail","index","Header","name","foods","food","get"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Accordion, Button, ButtonToolbar, Card, Modal, Popover} from 'react-bootstrap'\nimport PantryRaidNavBar from '../components/PantryRaidNavBar';\nimport SLForm from '../components/SLForm';\nimport {FOOD_NAMES} from \"../globals/foods\";\nimport {createSessionFormData} from \"../globals/sessionform\";\nimport {withCookies} from \"react-cookie\";\nimport {Redirect} from \"react-router-dom\";\n\n\nclass ShoppingList extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n\n    this.state = {\n      show: false,\n      shoppingLists: [],\n      needLogin: false,\n    }\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  handleCloseModal() {\n    this.setState({show: false})\n  }\n\n  handleShowModal() {\n    this.setState({show: true})\n  }\n\n  handleAddComplete = () => {\n    this.handleCloseModal();\n    this.getDataFromDb();\n  };\n\n  handleRemoveShoppingList = (sid) => {\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        this.getDataFromDb();\n      }\n    };\n\n    const formData = createSessionFormData(this.props);\n    formData.append('sid', sid);\n    req.open('POST', 'http://cryptoflipit.com/backend/remove_shopping_list');\n    req.send(formData);\n  };\n\n  getDataFromDb = () => {\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => {\n      if (req.readyState === 4) {\n        if (req.response === 'failure') {\n          this.setState({needLogin: true})\n        } else {\n          if (req.response === 'failure') {\n            this.setState({needLogin: true})\n          } else {\n            this.setState({shoppingLists: JSON.parse(req.response)})\n          }\n        }\n      }\n    };\n\n    const formData = createSessionFormData(this.props);\n    req.open('POST', 'http://cryptoflipit.com/backend/get_shopping_lists');\n    req.send(formData);\n  };\n\n  render() {\n    if (this.state.needLogin === true) {\n      return (\n        <Redirect to={{pathname: '/Login'}}/>\n      );\n    }\n\n    const popover = (\n      <Popover id=\"modal-popover\" title=\"popover\">\n\n      </Popover>\n    );\n    return (\n      <div>\n        <PantryRaidNavBar/>\n        <div style={{display: 'flex'}}>\n          <h1 className='ml-2'>Shopping Lists</h1>\n          <ButtonToolbar className='mt-2 mr-2' style={{marginLeft: 'auto', float: 'right'}}>\n            <Button size='lg' onClick={this.handleShowModal}>+ Add</Button>\n          </ButtonToolbar>\n        </div>\n        <div>\n          {this.state.shoppingLists.map((listDetail, index) => {\n            return (\n              <Accordion>\n                <Card>\n                  <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    {listDetail.name}\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                      {listDetail.foods.map(food => (\n                        <div>{FOOD_NAMES.get(food)}</div>\n                      ))}\n                      {/*<Button>Edit</Button>*/}\n                      <Button variant=\"danger\"\n                              onClick={() => this.handleRemoveShoppingList(listDetail.sid)}>Delete</Button>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n              </Accordion>\n            )\n          })}\n        </div>\n        <Modal show={this.state.show} onHide={this.handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add Shopping List</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <SLForm handleAddComplete={this.handleAddComplete}/>\n          </Modal.Body>\n          {/* <Modal.Footer>\n                        <Button onClick={this.handleCloseModal}>Save</Button>\n                    </Modal.Footer> */}\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default withCookies(ShoppingList)\n"]},"metadata":{},"sourceType":"module"}